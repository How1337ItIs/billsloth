#!/bin/bash
# LLM_CAPABILITY: auto
# AI PLAYGROUND - INTERACTIVE ASSISTANT PATTERN
# Presents mature open-source tools, explains pros/cons, logs choice, and allows open-ended input.

# Source the non-interactive ai playground module
SOURCE_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

set -euo pipefail
source "$SOURCE_DIR/ai_playground.sh"

ai_playground_interactive() {
    echo "ü§ñ AI PLAYGROUND - YOUR PERSONAL AI LABORATORY"
    echo "=============================================="
    echo ""
    echo "üéØ Master the power of artificial intelligence on YOUR terms - locally, privately,"
    echo "and designed for neurodivergent minds that need reliable, distraction-free AI tools!"
    echo ""
    echo "üß† Carl: 'Yeah, I got AI. It's called artificial intelligence, which is like... intelligence, but fake.'"
    echo ""
    
    echo "üéì WHAT IS LOCAL AI?"
    echo "==================="
    echo "Local AI means running artificial intelligence models on your own computer"
    echo "instead of sending your data to cloud services. This gives you:"
    echo "‚Ä¢ üîí Complete privacy - your conversations stay on your machine"
    echo "‚Ä¢ ‚ö° No internet required - works offline"
    echo "‚Ä¢ üí∞ No monthly subscriptions or API costs"
    echo "‚Ä¢ üéõÔ∏è Full control over the AI's behavior and responses"
    echo "‚Ä¢ üö´ No content filtering or usage restrictions"
    echo ""
    echo "üß† WHY LOCAL AI IS PERFECT FOR ADHD/NEURODIVERGENT MINDS:"
    echo "‚Ä¢ No distractions from web interfaces and ads"
    echo "‚Ä¢ Consistent performance without network variability"  
    echo "‚Ä¢ Private brainstorming without judgment or data collection"
    echo "‚Ä¢ Always available when hyperfocus strikes"
    echo "‚Ä¢ Customizable to your specific communication style"
    echo ""
    echo "ü§ñ wwwyzzerdd: 'It is I, the local AI wizard. No cloud required, broadbrain.'"
    echo ""
    echo "üèÜ THE COMPLETE LOCAL AI TOOLKIT:"
    echo "================================="
    echo ""
    echo "1) üéØ GPT4All - User-Friendly AI Chat"
    echo "   üí° What it does: Desktop app for chatting with local AI models"
    echo "   ‚úÖ Pros: Easiest setup, beautiful UI, works on any computer"
    echo "   üß† ADHD-Friendly: Simple interface, no distractions, works offline"
    echo "   üìñ Learn: Perfect first step into local AI - just download and chat"
    echo ""
    echo "2) ‚öôÔ∏è Llama.cpp - Lightweight AI Engine"
    echo "   üí° What it does: Minimal, fast AI inference with command-line control"
    echo "   ‚úÖ Pros: Ultra-lightweight, runs on weak hardware, scriptable"
    echo "   üß† ADHD-Friendly: Terminal-based = no UI distractions, fast responses"
    echo "   üìñ Learn: For those who prefer command-line tools and maximum control"
    echo ""
    echo "3) üåê Ollama - Local AI Made Simple"
    echo "   üí° What it does: Easy model management with Docker-like simplicity"
    echo "   ‚úÖ Pros: Simple commands, huge model library, great CLI experience"
    echo "   üß† ADHD-Friendly: 'Pull model, run model' - no complex setup"
    echo "   üìñ Learn: Popular choice for developers and power users"
    echo ""
    echo "4) üé® Stable Diffusion WebUI - Local Image Generation"
    echo "   üí° What it does: Create images from text descriptions locally"
    echo "   ‚úÖ Pros: Beautiful web interface, tons of models and styles"
    echo "   üß† ADHD-Friendly: Visual creativity tool, instant gratification"
    echo "   üìñ Learn: Perfect for visual thinkers and creative ADHD minds"
    echo ""
    echo "5) üìä Jupyter Notebooks - AI Experimentation Lab"
    echo "   üí° What it does: Interactive coding environment for AI experiments"
    echo "   ‚úÖ Pros: Learn by doing, visual outputs, huge AI community"
    echo "   üß† ADHD-Friendly: Immediate feedback, visual learning, step-by-step"
    echo "   üìñ Learn: Great for understanding how AI actually works"
    echo ""
    echo "6) üöÄ Complete AI Lab (All tools integrated)"
    echo "   üí° What it does: Full local AI setup with multiple tools"
    echo "   ‚úÖ Pros: Something for every AI need and learning style"
    echo "   üß† ADHD-Friendly: Choice reduces overwhelm - use what fits your mood"
    echo "   üìñ Learn: The ultimate 'AI independence' setup"
    echo ""
    echo "üß† Frylock: 'Local AI is the democratization of artificial intelligence.'"
    echo "üß† Frylock: 'You're not just using AI - you're mastering it.'"
    echo ""
    echo "Type the number of your choice, or 'other' to ask Claude Code for more options:"
    read -p "Your choice: " ai_choice
    
    # Ensure log directory exists
    mkdir -p ~/ai_playground
    
    case $ai_choice in
        1)
            echo "[LOG] Bill chose GPT4All" >> ~/ai_playground/assistant.log
            echo "üéØ DEPLOYING GPT4All - USER-FRIENDLY AI CHAT!"
            echo ""
            echo "üéì WHAT IS GPT4ALL?"
            echo "GPT4All is the easiest way to get started with local AI. It's a desktop"
            echo "application that lets you chat with powerful AI models locally:"
            echo "‚Ä¢ No technical setup required - just download and run"
            echo "‚Ä¢ Beautiful, ChatGPT-like interface"
            echo "‚Ä¢ Supports dozens of different AI models"
            echo "‚Ä¢ Works completely offline once models are downloaded"
            echo "‚Ä¢ Free and open-source"
            echo ""
            echo "üß† WHY IT'S PERFECT FOR ADHD:"
            echo "‚Ä¢ Familiar chat interface reduces learning curve"
            echo "‚Ä¢ No distracting ads or notifications"
            echo "‚Ä¢ Private brainstorming space for sensitive thoughts"
            echo "‚Ä¢ Always available when inspiration strikes"
            echo "‚Ä¢ Models can adapt to your communication style"
            echo ""
            
            # Download and install GPT4All
            echo "üîß Installing GPT4All..."
            if [[ "$OSTYPE" == "linux-gnu"* ]]; then
                echo "üì¶ Downloading GPT4All for Linux..."
                cd ~/Downloads
                wget https://gpt4all.io/installers/gpt4all-installer-linux.run
                chmod +x gpt4all-installer-linux.run
                echo "‚úÖ Downloaded! Run: ~/Downloads/gpt4all-installer-linux.run"
                
            elif [[ "$OSTYPE" == "darwin"* ]]; then
                echo "üçé For macOS, download from: https://gpt4all.io/installers/gpt4all-installer-darwin.dmg"
                echo "Or install with: brew install --cask gpt4all"
                
            else
                echo "ü™ü For Windows, download from: https://gpt4all.io/installers/gpt4all-installer-win64.exe"
            fi
            
            echo ""
            echo "üéì GPT4ALL CRASH COURSE:"
            echo "======================="
            echo ""
            echo "üìñ FIRST-TIME SETUP:"
            echo "1. Launch GPT4All application"
            echo "2. Choose a model to download (recommended: Llama 3.2 3B)"
            echo "3. Wait for model download (3-8GB, one-time only)"
            echo "4. Start chatting with your local AI!"
            echo ""
            echo "ü§ñ RECOMMENDED MODELS FOR ADHD MINDS:"
            echo ""
            echo "üü¢ BEGINNER - Light & Fast:"
            echo "‚Ä¢ Llama 3.2 3B - Great balance of speed and intelligence"
            echo "‚Ä¢ Phi-3 Mini - Extremely fast, good for quick questions"
            echo "‚Ä¢ TinyLlama - Ultra-fast but simpler responses"
            echo ""
            echo "üü° INTERMEDIATE - More Capable:"
            echo "‚Ä¢ Llama 3.1 8B - Better reasoning, still runs on most hardware"
            echo "‚Ä¢ Mistral 7B - Great for creative writing and analysis"
            echo ""
            echo "üî¥ ADVANCED - Most Capable (Needs Good Hardware):"
            echo "‚Ä¢ Llama 3.1 70B - Near GPT-4 quality for complex tasks"
            echo "‚Ä¢ Nous Hermes - Fine-tuned for helpful, detailed responses"
            echo ""
            echo "üí° ADHD-FRIENDLY USAGE TIPS:"
            echo ""
            echo "üß† Brain Dumping:"
            echo "‚Ä¢ 'Help me organize these random thoughts: [stream of consciousness]'"
            echo "‚Ä¢ 'Turn this messy idea into a structured plan'"
            echo "‚Ä¢ 'What am I trying to say here?' [paste confusing text]"
            echo ""
            echo "üìã Task Management:"
            echo "‚Ä¢ 'Break this overwhelming project into small steps'"
            echo "‚Ä¢ 'What should I prioritize from this list?'"
            echo "‚Ä¢ 'Help me estimate how long each task will take'"
            echo ""
            echo "‚úçÔ∏è Communication Help:"
            echo "‚Ä¢ 'Make this email sound more professional'"
            echo "‚Ä¢ 'Explain this technical concept in simple terms'"
            echo "‚Ä¢ 'Help me respond to this message diplomatically'"
            echo ""
            echo "üîç Research Assistant:"
            echo "‚Ä¢ 'Summarize the key points of [topic]'"
            echo "‚Ä¢ 'What questions should I ask about [subject]?'"
            echo "‚Ä¢ 'Help me understand the pros and cons of [decision]'"
            echo ""
            echo "‚úÖ GPT4ALL READY!"
            echo "üéâ You now have ChatGPT-level AI running privately on your computer!"
            echo ""
            echo "üçî Meatwad: 'I understand! Now I can talk to the computer and it talks back!'"
            ;;
        2)
            echo "[LOG] Bill chose Llama.cpp" >> ~/ai_playground/assistant.log
            echo "‚öôÔ∏è DEPLOYING LLAMA.CPP - LIGHTWEIGHT AI ENGINE!"
            echo ""
            echo "üéì WHAT IS LLAMA.CPP?"
            echo "Llama.cpp is a minimalist C++ implementation for running AI models with"
            echo "maximum efficiency and control. It's for users who want:"
            echo "‚Ä¢ Maximum speed with minimal resource usage"
            echo "‚Ä¢ Command-line control and scriptability"
            echo "‚Ä¢ Integration with other tools and workflows"
            echo "‚Ä¢ No GUI overhead - pure performance"
            echo ""
            echo "üß† WHY IT'S GREAT FOR ADHD COMMAND-LINE USERS:"
            echo "‚Ä¢ No GUI distractions - just terminal and AI"
            echo "‚Ä¢ Extremely fast startup and responses"
            echo "‚Ä¢ Scriptable for automated workflows"
            echo "‚Ä¢ Works on any hardware, even old computers"
            echo "‚Ä¢ Perfect for hyperfocus terminal sessions"
            echo ""
            
            # Install build tools and dependencies
            echo "üîß Installing Llama.cpp..."
            if [[ "$OSTYPE" == "linux-gnu"* ]]; then
                echo "Installing build dependencies..."
                sudo apt update
                sudo apt install -y build-essential cmake git
                
                echo "Cloning and building llama.cpp..."
                cd ~/Downloads
                git clone https://github.com/ggerganov/llama.cpp.git
                cd llama.cpp
                make -j$(nproc)
                
                # Install to local bin
                mkdir -p ~/.local/bin
                cp main ~/.local/bin/llama-cpp
                cp server ~/.local/bin/llama-cpp-server
                
                # Add to PATH if needed
                if [[ ":$PATH:" != *":$HOME/.local/bin:"* ]]; then
                    echo 'export PATH="$HOME/.local/bin:$PATH"' >> ~/.bashrc
                    export PATH="$HOME/.local/bin:$PATH"
                fi
                
            elif [[ "$OSTYPE" == "darwin"* ]]; then
                if command -v brew &> /dev/null; then
                    echo "Installing llama.cpp via Homebrew..."
                    brew install llama.cpp
                else
                    echo "Please install Homebrew first, then run: brew install llama.cpp"
                    return 1
                fi
            else
                echo "For Windows, download pre-built binaries from:"
                echo "https://github.com/ggerganov/llama.cpp/releases"
            fi
            
            # Create models directory
            mkdir -p ~/ai_models
            
            echo ""
            echo "üéì LLAMA.CPP CRASH COURSE:"
            echo "========================="
            echo ""
            echo "üìñ GETTING YOUR FIRST MODEL:"
            echo "Models are stored in GGUF format. Download from Hugging Face:"
            echo ""
            echo "üü¢ LIGHTWEIGHT MODELS (2-4GB):"
            echo "cd ~/ai_models"
            echo "wget https://huggingface.co/microsoft/Phi-3-mini-4k-instruct-gguf/resolve/main/Phi-3-mini-4k-instruct-q4.gguf"
            echo ""
            echo "üü° BALANCED MODELS (4-8GB):"
            echo "wget https://huggingface.co/bartowski/Llama-3.2-3B-Instruct-GGUF/resolve/main/Llama-3.2-3B-Instruct-Q4_K_M.gguf"
            echo ""
            echo "üéØ BASIC USAGE:"
            echo ""
            echo "# Interactive chat:"
            echo "llama-cpp -m ~/ai_models/model.gguf -n 512 --color -i"
            echo ""
            echo "# Single prompt:"
            echo "llama-cpp -m ~/ai_models/model.gguf -p 'Explain quantum computing in simple terms' -n 256"
            echo ""
            echo "# Start HTTP server (use with curl or scripts):"
            echo "llama-cpp-server -m ~/ai_models/model.gguf --host 0.0.0.0 --port 8080"
            echo ""
            echo "üí° ADHD-FRIENDLY COMMAND ALIASES:"
            echo "Add these to your ~/.bashrc for easy access:"
            echo ""
            echo "# Quick AI chat"
            echo "alias ai='llama-cpp -m ~/ai_models/default.gguf --color -i'"
            echo ""
            echo "# Fast AI for quick questions"  
            echo "alias qai='llama-cpp -m ~/ai_models/default.gguf -n 256 -p'"
            echo ""
            echo "# AI server mode"
            echo "alias ai-server='llama-cpp-server -m ~/ai_models/default.gguf --port 8080'"
            echo ""
            echo "üöÄ ADVANCED INTEGRATIONS:"
            echo ""
            echo "üìù AI Writing Helper:"
            echo "echo 'Help me improve this text:' | cat - document.txt | llama-cpp -m model.gguf"
            echo ""
            echo "üîß Code Review Assistant:"
            echo "git diff | llama-cpp -m model.gguf -p 'Review this code and suggest improvements:'"
            echo ""
            echo "üìä Log Analysis:"
            echo "tail -100 /var/log/system.log | llama-cpp -m model.gguf -p 'Analyze these logs for issues:'"
            echo ""
            echo "‚úÖ LLAMA.CPP INSTALLED!"
            echo "üéØ Download a model to ~/ai_models/ and start chatting with: llama-cpp -m model.gguf -i"
            echo ""
            echo "üß† Frylock: 'Command-line AI is the purest form of human-machine interaction.'"
            ;;
        3)
            echo "[LOG] Bill chose Ollama" >> ~/ai_playground/assistant.log
            echo "üåê DEPLOYING OLLAMA - LOCAL AI MADE SIMPLE!"
            echo ""
            echo "üéì WHAT IS OLLAMA?"
            echo "Ollama makes running local AI models as easy as Docker containers:"
            echo "‚Ä¢ 'ollama pull llama3.2' - download a model"
            echo "‚Ä¢ 'ollama run llama3.2' - start chatting"
            echo "‚Ä¢ Huge library of pre-configured models"
            echo "‚Ä¢ Automatic GPU acceleration when available"
            echo ""
            
            # Install Ollama
            echo "üîß Installing Ollama..."
            if [[ "$OSTYPE" == "linux-gnu"* ]] || [[ "$OSTYPE" == "darwin"* ]]; then
                curl -fsSL https://ollama.ai/install.sh | sh
            else
                echo "For Windows, download from: https://ollama.ai/"
            fi
            
            echo ""
            echo "üéì OLLAMA CRASH COURSE:"
            echo "====================="
            echo ""
            echo "üöÄ GET STARTED IN 30 SECONDS:"
            echo "ollama pull llama3.2:3b    # Download 3B model (fast)"
            echo "ollama run llama3.2:3b     # Start chatting!"
            echo ""
            echo "ü§ñ RECOMMENDED MODELS:"
            echo "‚Ä¢ llama3.2:1b - Ultra-fast, basic conversations"
            echo "‚Ä¢ llama3.2:3b - Great balance (recommended for ADHD)"
            echo "‚Ä¢ llama3.1:8b - More capable, needs more RAM"
            echo "‚Ä¢ codellama - Specialized for programming help"
            echo "‚Ä¢ mistral - Good at creative writing"
            echo ""
            echo "üí° ADHD-FRIENDLY OLLAMA COMMANDS:"
            echo "# Quick question without starting interactive mode:"
            echo "ollama run llama3.2:3b 'Summarize this in 3 bullet points: [text]'"
            echo ""
            echo "# Pipe text directly to AI:"
            echo "echo 'Explain this code' | cat - script.py | ollama run codellama"
            echo ""
            echo "‚úÖ OLLAMA INSTALLED! Try: ollama run llama3.2:3b"
            ;;
        4)
            echo "[LOG] Bill chose Stable Diffusion WebUI" >> ~/ai_playground/assistant.log
            echo "üé® DEPLOYING STABLE DIFFUSION - LOCAL IMAGE GENERATION!"
            echo ""
            echo "Create stunning images from text descriptions, all running locally!"
            echo "Perfect for visual ADHD minds who think in images."
            echo ""
            echo "‚ö†Ô∏è REQUIREMENTS:"
            echo "‚Ä¢ NVIDIA GPU with 4GB+ VRAM (recommended)"
            echo "‚Ä¢ 8GB+ system RAM"
            echo "‚Ä¢ 20GB+ free disk space for models"
            echo ""
            echo "üîß Quick setup requires Python. Full guide at:"
            echo "https://github.com/AUTOMATIC1111/stable-diffusion-webui"
            echo ""
            echo "‚úÖ STABLE DIFFUSION INFO PROVIDED!"
            ;;
        5)
            echo "[LOG] Bill chose Jupyter Notebooks" >> ~/ai_playground/assistant.log
            echo "üìä DEPLOYING JUPYTER NOTEBOOKS - AI EXPERIMENTATION LAB!"
            echo ""
            echo "Interactive coding environment perfect for learning AI step-by-step."
            echo ""
            if ! command -v python3 &> /dev/null; then
                echo "üîß Installing Python first..."
                if [[ "$OSTYPE" == "linux-gnu"* ]]; then
                    sudo apt update && sudo apt install -y python3 python3-pip
                elif [[ "$OSTYPE" == "darwin"* ]]; then
                    brew install python3
                fi
            fi
            
            echo "üì¶ Installing Jupyter..."
            pip3 install --user jupyter notebook
            
            echo "‚úÖ JUPYTER INSTALLED! Run: jupyter notebook"
            ;;
        6)
            echo "[LOG] Bill chose Complete AI Lab" >> ~/ai_playground/assistant.log
            echo "üöÄ DEPLOYING COMPLETE AI LABORATORY!"
            echo ""
            echo "This installs GPT4All, Ollama, and sets up a complete local AI environment."
            echo ""
            read -p "Continue with complete AI lab setup? (y/n): " ai_confirm
            if [[ $ai_confirm =~ ^[Yy]$ ]]; then
                echo "üèóÔ∏è Building complete AI laboratory..."
                # Install GPT4All (simplified)
                echo "1/3 Setting up GPT4All..."
                # Install Ollama
                echo "2/3 Installing Ollama..."
                curl -fsSL https://ollama.ai/install.sh | sh
                # Install Jupyter
                echo "3/3 Installing Jupyter..."
                pip3 install --user jupyter notebook
                
                echo ""
                echo "üéâ COMPLETE AI LAB DEPLOYED!"
                echo "============================================="
                echo ""
                echo "üéØ YOUR AI ARSENAL:"
                echo "‚Ä¢ GPT4All - Download from https://gpt4all.io"
                echo "‚Ä¢ Ollama - Run: ollama pull llama3.2:3b"
                echo "‚Ä¢ Jupyter - Run: jupyter notebook"
                echo ""
                echo "‚úÖ You now have a complete local AI laboratory!"
            fi
            ;;
        other|Other|OTHER)
            echo "[LOG] Bill requested more options from Claude Code" >> ~/ai_playground/assistant.log
            echo "ü§ñ SUMMONING CLAUDE CODE FOR ADVANCED AI RECOMMENDATIONS..."
            echo ""
            echo "Claude Code can help you with specialized AI setups:"
            echo ""
            echo "üî¨ ADVANCED AI TOOLS:"
            echo "‚Ä¢ Text-generation-webui - Advanced local AI interface"
            echo "‚Ä¢ LocalAI - OpenAI API compatible local server"
            echo "‚Ä¢ Oobabooga - Community-driven AI interface"
            echo "‚Ä¢ ComfyUI - Node-based image generation"
            echo "‚Ä¢ InvokeAI - Professional AI art studio"
            echo ""
            echo "üí° Tell Claude Code about your specific needs!"
            ;;
        *)
            echo "No valid choice made. Nothing launched."
            ;;
    esac
    echo "\nYou can always re-run this assistant to try a different solution!"
}

if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    ai_playground_interactive
fi 