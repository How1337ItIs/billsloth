#!/bin/bash
# Automation Mastery - Personal Workflow Assessment Component
# Analyzes user workflows and digital habits to create personalized recommendations

set -euo pipefail

# Source error handling library if available
if [ -f "$(dirname "${BASH_SOURCE[0]}")/../../lib/error_handling.sh" ]; then
    SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
    source "$SCRIPT_DIR/../../lib/error_handling.sh" 2>/dev/null || {
        echo "Warning: Error handling library not available"
    }
fi

# Assessment data management
ASSESSMENT_DIR="$HOME/.bill-sloth/automation-assessment"
ASSESSMENT_FILE="$ASSESSMENT_DIR/workflow-assessment.md"
RECOMMENDATIONS_FILE="$ASSESSMENT_DIR/recommendations.md"

# Initialize assessment environment
init_assessment() {
    create_directory "$ASSESSMENT_DIR" || {
        echo "Warning: Could not create assessment directory"
        ASSESSMENT_DIR="/tmp/bill-sloth-assessment"
        create_directory "$ASSESSMENT_DIR"
    }
}

# Main workflow assessment function
assess_personal_workflows() {
    init_assessment
    
    print_header "üîç PERSONAL WORKFLOW ASSESSMENT"
    
    echo "[ATHF] Meatwad: 'I get it! I get it!'"
    echo ""
    echo "Before we dive into automation, let's understand YOUR unique workflows,"
    echo "pain points, and digital habits. This assessment will help us create"
    echo "personalized automation recommendations just for you."
    echo ""
    echo "üß† This assessment takes 5-10 minutes and will help us:"
    echo "‚Ä¢ Identify your highest-impact automation opportunities"
    echo "‚Ä¢ Recommend the best platforms for your specific needs"
    echo "‚Ä¢ Create custom workflows based on your actual usage patterns"
    echo "‚Ä¢ Prioritize automations that will save you the most time/stress"
    echo ""
    
    if ! confirm "Ready to start your personalized assessment?"; then
        log_info "Assessment cancelled by user"
        return 0
    fi
    
    # Initialize assessment file
    cat > "$ASSESSMENT_FILE" << EOF
# Personal Workflow Assessment - $(date)

Generated by Bill Sloth Automation Mastery Module
User: $USER
System: $(uname -o 2>/dev/null || echo "Unknown")

EOF
    
    # Run assessment sections
    log_step 1 5 "Digital Habits Assessment"
    assess_digital_habits
    
    log_step 2 5 "Pain Points Analysis"
    assess_pain_points
    
    log_step 3 5 "Neurodivergent Accommodations"
    assess_neurodivergent_needs
    
    log_step 4 5 "Work & Business Context"
    assess_work_context
    
    log_step 5 5 "Automation Experience"
    assess_automation_experience
    
    log_progress "Generating your personalized automation recommendations..."
    generate_personalized_recommendations
    
    log_success "Assessment complete! Your personalized recommendations are ready."
    echo ""
    echo "üß† Frylock: 'Now we can create a targeted automation strategy for you.'"
    echo ""
    
    if confirm "Would you like to see your recommendations now?"; then
        show_recommendations
    fi
}

# Section 1: Digital Habits Assessment
assess_digital_habits() {
    print_separator "-" 50
    echo "üìã SECTION 1: DAILY DIGITAL HABITS"
    print_separator "-" 50
    echo ""
    echo "ü•§ Shake: 'Yeah, we need to know what you do all day so we can judge you.'"
    echo ""
    
    # Device usage
    echo "1. What devices do you use regularly? (check all that apply)"
    echo "   a) Windows PC/Laptop"
    echo "   b) Mac"
    echo "   c) iPhone"
    echo "   d) Android phone"
    echo "   e) iPad/Tablet"
    echo "   f) Smart home devices (Alexa, Google Home, etc.)"
    echo "   g) Smart watch"
    echo ""
    
    local devices
    devices=$(prompt_with_timeout "Enter letters (e.g., 'a,c,g')" 60 "")
    echo "## Devices Used: $devices" >> "$ASSESSMENT_FILE"
    
    echo ""
    
    # App usage
    echo "2. What apps/services do you use daily? (check all that apply)"
    echo "   a) Gmail/Google Workspace"
    echo "   b) Outlook/Microsoft 365"
    echo "   c) Slack/Discord/Teams"
    echo "   d) WhatsApp/Telegram/Signal"
    echo "   e) Notion/Obsidian/Roam"
    echo "   f) Todoist/Any.do/Things"
    echo "   g) Calendar apps"
    echo "   h) Social media (Twitter, Instagram, etc.)"
    echo "   i) Spotify/Apple Music"
    echo "   j) Banking/Financial apps"
    echo "   k) Shopping apps (Amazon, etc.)"
    echo ""
    
    local apps
    apps=$(prompt_with_timeout "Enter letters" 60 "")
    echo "## Daily Apps: $apps" >> "$ASSESSMENT_FILE"
    
    # Store for recommendations
    export ASSESSMENT_DEVICES="$devices"
    export ASSESSMENT_APPS="$apps"
}

# Section 2: Pain Points Analysis
assess_pain_points() {
    print_separator "-" 50
    echo "üìã SECTION 2: CURRENT PAIN POINTS"
    print_separator "-" 50
    echo ""
    echo "üß† Frylock: 'Now let's identify the inefficiencies in your current system.'"
    echo ""
    
    # Repetitive tasks
    echo "3. What tasks do you find most repetitive/annoying? (rank 1-3, 1 = worst)"
    echo "   a) Email management and responses"
    echo "   b) Calendar scheduling and meeting prep"
    echo "   c) File organization and backup"
    echo "   d) Social media posting and engagement"
    echo "   e) Invoice/expense tracking"
    echo "   f) Data entry and form filling"
    echo "   g) Research and information gathering"
    echo "   h) Task and project management"
    echo ""
    
    local pain_points
    pain_points=$(prompt_with_timeout "Enter top 3 (e.g., 'a,h,c')" 60 "")
    echo "## Top Pain Points: $pain_points" >> "$ASSESSMENT_FILE"
    
    echo ""
    
    # Time spent
    echo "4. How much time do you spend daily on these repetitive tasks?"
    echo "   a) Less than 30 minutes"
    echo "   b) 30 minutes to 1 hour"
    echo "   c) 1-2 hours"
    echo "   d) 2-4 hours"
    echo "   e) More than 4 hours (ü•§ Shake: 'Jesus, get a life!')"
    echo ""
    
    local time_spent
    time_spent=$(prompt_with_timeout "Enter letter" 30 "c")
    echo "## Daily Time on Repetitive Tasks: $time_spent" >> "$ASSESSMENT_FILE"
    
    # Store for recommendations
    export ASSESSMENT_PAIN_POINTS="$pain_points"
    export ASSESSMENT_TIME_SPENT="$time_spent"
}

# Section 3: Neurodivergent Accommodations
assess_neurodivergent_needs() {
    print_separator "-" 50
    echo "üìã SECTION 3: NEURODIVERGENT ACCOMMODATIONS"
    print_separator "-" 50
    echo ""
    echo "üçî Meatwad: 'Everyone's brain is different! I understand!'"
    echo ""
    
    # Neurodivergent conditions
    echo "5. Do any of these apply to you? (check all that apply)"
    echo "   a) ADHD/Executive function challenges"
    echo "   b) Autism/Need for routine and predictability"
    echo "   c) Dyslexia/Reading and writing challenges"
    echo "   d) Anxiety/Overwhelm with complex systems"
    echo "   e) Depression/Low motivation for routine tasks"
    echo "   f) Time blindness/Difficulty with scheduling"
    echo "   g) Sensory processing differences"
    echo "   h) None of the above"
    echo ""
    
    local neurodivergent
    neurodivergent=$(prompt_with_timeout "Enter letters" 60 "")
    echo "## Neurodivergent Considerations: $neurodivergent" >> "$ASSESSMENT_FILE"
    
    echo ""
    
    # Interface preferences
    echo "6. What type of interface do you prefer?"
    echo "   a) Visual/flowchart-based (I need to see the connections)"
    echo "   b) Simple/minimal (too many options overwhelm me)"
    echo "   c) Text-based/detailed (I like to understand everything)"
    echo "   d) Voice/conversational (I prefer talking to typing)"
    echo ""
    
    local interface_pref
    interface_pref=$(prompt_with_timeout "Enter letter" 30 "b")
    echo "## Interface Preference: $interface_pref" >> "$ASSESSMENT_FILE"
    
    # Store for recommendations
    export ASSESSMENT_NEURODIVERGENT="$neurodivergent"
    export ASSESSMENT_INTERFACE_PREF="$interface_pref"
}

# Section 4: Work & Business Context
assess_work_context() {
    print_separator "-" 50
    echo "üìã SECTION 4: WORK & BUSINESS CONTEXT"
    print_separator "-" 50
    echo ""
    echo "üßô wwwyzzerdd: 'What is the nature of your employment, broadbrain?'"
    echo ""
    
    # Work type
    echo "7. What best describes your work situation?"
    echo "   a) Full-time employee at a company"
    echo "   b) Freelancer/Independent contractor"
    echo "   c) Business owner/Entrepreneur"
    echo "   d) Student"
    echo "   e) Multiple roles (employee + side business)"
    echo "   f) Currently unemployed/between jobs"
    echo ""
    
    local work_type
    work_type=$(prompt_with_timeout "Enter letter" 30 "a")
    echo "## Work Type: $work_type" >> "$ASSESSMENT_FILE"
    
    echo ""
    
    # Industry
    echo "8. What industry/field are you in?"
    echo "   a) Technology/Software"
    echo "   b) Creative (design, writing, media)"
    echo "   c) Business/Finance/Consulting"
    echo "   d) Education/Research"
    echo "   e) Healthcare"
    echo "   f) Service industry"
    echo "   g) Other"
    echo ""
    
    local industry
    industry=$(prompt_with_timeout "Enter letter" 30 "g")
    echo "## Industry: $industry" >> "$ASSESSMENT_FILE"
    
    # Store for recommendations
    export ASSESSMENT_WORK_TYPE="$work_type"
    export ASSESSMENT_INDUSTRY="$industry"
}

# Section 5: Automation Experience
assess_automation_experience() {
    print_separator "-" 50
    echo "üìã SECTION 5: AUTOMATION EXPERIENCE"
    print_separator "-" 50
    echo ""
    echo "ü•§ Shake: 'How much of a computer expert are you? Like Carl?'"
    echo "üë® Carl: 'Yeah, I'm a computer expert now. I know all about computers.'"
    echo ""
    
    # Experience level
    echo "9. What's your current automation experience?"
    echo "   a) Complete beginner (üçî Meatwad: 'I understand! Me too!')"
    echo "   b) Used basic features (email filters, simple phone shortcuts)"
    echo "   c) Some experience (tried Zapier/IFTTT a few times)"
    echo "   d) Intermediate (have working automations, want to expand)"
    echo "   e) Advanced (üß† Frylock: 'Ah, a fellow automation researcher')"
    echo ""
    
    local experience_level
    experience_level=$(prompt_with_timeout "Enter letter" 30 "b")
    echo "## Experience Level: $experience_level" >> "$ASSESSMENT_FILE"
    
    echo ""
    
    # Budget
    echo "10. What's your monthly budget for automation tools?"
    echo "    a) $0 (free tools only)"
    echo "    b) Under $25/month"
    echo "    c) $25-50/month"
    echo "    d) $50-100/month"
    echo "    e) Over $100/month (ü•§ Shake: 'Money bags over here!')"
    echo ""
    
    local budget
    budget=$(prompt_with_timeout "Enter letter" 30 "b")
    echo "## Budget: $budget" >> "$ASSESSMENT_FILE"
    
    # Store for recommendations
    export ASSESSMENT_EXPERIENCE_LEVEL="$experience_level"
    export ASSESSMENT_BUDGET="$budget"
}

# Generate personalized recommendations
generate_personalized_recommendations() {
    local timestamp=$(date)
    
    cat > "$RECOMMENDATIONS_FILE" << EOF
# Personalized Automation Recommendations

**Generated:** $timestamp  
**Assessment File:** $ASSESSMENT_FILE

## üéØ Your Automation Profile

**Devices:** $ASSESSMENT_DEVICES  
**Apps:** $ASSESSMENT_APPS  
**Pain Points:** $ASSESSMENT_PAIN_POINTS  
**Time Spent:** $ASSESSMENT_TIME_SPENT  
**Neurodivergent Considerations:** $ASSESSMENT_NEURODIVERGENT  
**Interface Preference:** $ASSESSMENT_INTERFACE_PREF  
**Work Type:** $ASSESSMENT_WORK_TYPE  
**Industry:** $ASSESSMENT_INDUSTRY  
**Experience Level:** $ASSESSMENT_EXPERIENCE_LEVEL  
**Budget:** $ASSESSMENT_BUDGET  

## üöÄ Recommended Automation Strategy

EOF

    # Generate specific recommendations based on responses
    generate_platform_recommendations >> "$RECOMMENDATIONS_FILE"
    generate_workflow_recommendations >> "$RECOMMENDATIONS_FILE"
    generate_neurodivergent_recommendations >> "$RECOMMENDATIONS_FILE"
    generate_learning_path >> "$RECOMMENDATIONS_FILE"
}

# Generate platform recommendations
generate_platform_recommendations() {
    echo "### üì± Recommended Platforms"
    echo ""
    
    case "$ASSESSMENT_EXPERIENCE_LEVEL" in
        "a") # Beginner
            echo "**For Beginners:**"
            echo "- Start with IFTTT (simplest interface)"
            echo "- Use built-in phone shortcuts"
            echo "- Try email filters and rules"
            ;;
        "b"|"c") # Basic to some experience
            echo "**Next Steps:**"
            echo "- Zapier (most popular, good tutorials)"
            echo "- Power Automate (if using Microsoft tools)"
            echo "- Advanced phone automation (Shortcuts/Tasker)"
            ;;
        "d"|"e") # Intermediate to advanced
            echo "**Advanced Platforms:**"
            echo "- Make (Integromat) for complex workflows"
            echo "- Node-RED for IoT and custom integrations"
            echo "- Custom API integrations"
            ;;
    esac
    echo ""
}

# Generate workflow recommendations
generate_workflow_recommendations() {
    echo "### üîÑ Priority Workflows"
    echo ""
    
    echo "Based on your pain points, start with these automations:"
    echo ""
    
    if [[ "$ASSESSMENT_PAIN_POINTS" == *"a"* ]]; then
        echo "**Email Management:**"
        echo "- Auto-sort emails into folders"
        echo "- Canned responses for common questions"
        echo "- Email reminders for follow-ups"
        echo ""
    fi
    
    if [[ "$ASSESSMENT_PAIN_POINTS" == *"b"* ]]; then
        echo "**Calendar & Scheduling:**"
        echo "- Automatic meeting prep reminders"
        echo "- Buffer time between meetings"
        echo "- Auto-decline conflicting invites"
        echo ""
    fi
    
    if [[ "$ASSESSMENT_PAIN_POINTS" == *"h"* ]]; then
        echo "**Task Management:**"
        echo "- Automatic task creation from emails"
        echo "- Daily/weekly review reminders"
        echo "- Priority-based task sorting"
        echo ""
    fi
}

# Generate neurodivergent-specific recommendations
generate_neurodivergent_recommendations() {
    echo "### üß† Neurodivergent-Friendly Features"
    echo ""
    
    if [[ "$ASSESSMENT_NEURODIVERGENT" == *"a"* ]]; then
        echo "**ADHD Support:**"
        echo "- Time-based reminders and alerts"
        echo "- Task breakdown automation"
        echo "- Focus mode triggers"
        echo ""
    fi
    
    if [[ "$ASSESSMENT_NEURODIVERGENT" == *"f"* ]]; then
        echo "**Time Blindness Support:**"
        echo "- Automatic time tracking"
        echo "- Meeting preparation alerts"
        echo "- Transition time reminders"
        echo ""
    fi
    
    case "$ASSESSMENT_INTERFACE_PREF" in
        "a") echo "**Visual Interface:** Use Zapier or Make for flowchart-style automation building" ;;
        "b") echo "**Simple Interface:** Start with IFTTT for minimal-complexity automation" ;;
        "c") echo "**Detailed Interface:** Power Automate offers extensive documentation and options" ;;
        "d") echo "**Voice Interface:** Focus on Siri Shortcuts or Google Assistant routines" ;;
    esac
    echo ""
}

# Generate learning path
generate_learning_path() {
    echo "### üìö Your Learning Path"
    echo ""
    echo "**Week 1-2:** Start with one simple automation"
    echo "**Week 3-4:** Add email and calendar automation"
    echo "**Month 2:** Expand to social media and file management"
    echo "**Month 3+:** Advanced workflows and custom integrations"
    echo ""
    echo "**Resources:**"
    echo "- Platform-specific tutorials in Bill Sloth modules"
    echo "- Community forums and templates"
    echo "- Regular progress reviews and optimization"
}

# Show recommendations
show_recommendations() {
    if [ -f "$RECOMMENDATIONS_FILE" ]; then
        print_header "üéØ YOUR PERSONALIZED AUTOMATION RECOMMENDATIONS"
        
        if command -v cat &>/dev/null; then
            cat "$RECOMMENDATIONS_FILE"
        else
            echo "Recommendations saved to: $RECOMMENDATIONS_FILE"
        fi
        
        echo ""
        echo "üìÅ Files created:"
        echo "‚Ä¢ Assessment: $ASSESSMENT_FILE"
        echo "‚Ä¢ Recommendations: $RECOMMENDATIONS_FILE"
        echo ""
    else
        log_error "Recommendations file not found"
    fi
}

# Export assessment functions
export -f assess_personal_workflows init_assessment
export -f assess_digital_habits assess_pain_points assess_neurodivergent_needs
export -f assess_work_context assess_automation_experience
export -f generate_personalized_recommendations show_recommendations